{-
   This module does the mapping from Sparkjava abstractions
   to Frege.
--}
module chinook.Spark where

import frege.java.Util (Set, Map)
--   _____                            _
--  |  __ \                          | |
--  | |__) |___  __ _ _   _  ___  ___| |_
--  |  _  // _ \/ _` | | | |/ _ \/ __| __|
--  | | \ \  __/ (_| | |_| |  __/\__ \ |_
--  |_|  \_\___|\__, |\__,_|\___||___/\__|
--                 | |
--                 |_|

data QueryMap = native spark.QueryParamsMap where
    native toMap :: MutableIO QueryMap -> IO (MutableIO (Map String (JArray String)))
{-
   Request type and related methods to get information
   from the request.
--}
data Request = native spark.Request where
    -- value of foo path parameter
    native paths params                      :: MutableIO Request -> String -> IO (Maybe String)
    -- all path parameters
    native allPaths params                   :: MutableIO Request -> IO (MutableIO (Map String String))
    -- value of FOO query param
    native queryParams                       :: MutableIO Request -> String -> IO (Maybe String)
    -- all query parameters
    native allQueryParams queryParams        :: MutableIO Request -> IO (MutableIO (Set String))
    -- all values of FOO query param
    native queryParamsValues                 :: MutableIO Request -> String -> IO (ArrayOf RealWorld String)
    -- the query map
    native queryMap                          :: MutableIO Request -> IO (MutableIO QueryMap)
    -- query map for a certain parameter
    native queryMapFor queryMap              :: MutableIO Request -> String -> IO (MutableIO QueryMap)
    -- the query param list
    native params queryParams                :: MutableIO Request -> String -> IO (Maybe String)
-- the attributes list
    native attributes                        :: MutableIO Request -> IO (MutableIO (Set String))
    -- value of foo attribute
    native gattr attribute                   :: MutableIO Request -> String -> IO (Maybe String)
    -- sets value of attribute A to V
    native sattr attribute                   :: MutableIO Request -> String -> String -> IO ()
    -- request body sent by the client
    native body                              :: MutableIO Request -> IO (Maybe String)
    -- request body as bytes
    native bodyAsBytes                       :: MutableIO Request -> IO (ArrayOf RealWorld Byte)
    -- length of request body
    native contentLength                     :: MutableIO Request -> IO (Int)
    -- content type of request.body
    native contentType                       :: MutableIO Request -> IO (Maybe String)
    -- the context path, e.g. "/hello"
    native contextPath                       :: MutableIO Request -> IO (Maybe String)
    -- request cookies sent by the client
    native cookies                           :: MutableIO Request -> IO (MutableIO (Map String String))
    -- Get cookies by name
    native cookie                            :: MutableIO Request -> String -> IO (Maybe String)
    -- the HTTP header list
    native allHeaders headers                :: MutableIO Request -> IO (MutableIO (Set String))
    -- value of BAR header
    native headers                           :: MutableIO Request -> String -> IO (Maybe String)
    -- the host, e.g. "example.com"
    native host                              :: MutableIO Request -> IO (Maybe String)
    -- client IP address
    native ip                                :: MutableIO Request -> IO (Maybe String)
    -- the path info
    native pathInfo                          :: MutableIO Request -> IO (Maybe String)
    -- the server port
    native port                              :: MutableIO Request -> IO (Maybe Integer)
    -- the protocol, e.g. HTTP/1.1
    native protocol                          :: MutableIO Request -> IO (Maybe String)
    -- The HTTP method (GET, ..etc)
    native requestMethod                     :: MutableIO Request -> IO (Maybe String)
    -- "http"
    native scheme                            :: MutableIO Request -> IO (Maybe String)
    -- the servlet path, e.g. /result.jsp
    native servletPath                       :: MutableIO Request -> IO (Maybe String)
    -- splat (*) parameters:
    native splat                             :: MutableIO Request -> IO (ArrayOf RealWorld String)
    -- the uri, e.g. "http://example.com/foo"
    native uri                               :: MutableIO Request -> IO (Maybe String)
    -- the url. e.g. "http://example.com/foo"
    native url                               :: MutableIO Request -> IO (Maybe String)
    -- The user agent
    native userAgent                         :: MutableIO Request -> IO (Maybe String)

--   _____
--  |  __ \
--  | |__) |___  ___ _ __   ___  _ __  ___  ___
--  |  _  // _ \/ __| '_ \ / _ \| '_ \/ __|/ _ \
--  | | \ \  __/\__ \ |_) | (_) | | | \__ \  __/
--  |_|  \_\___||___/ .__/ \___/|_| |_|___/\___|
--                  | |
--                  |_|

{-
   Response type and related methods to complete/alter
   the response.
--}
data Response = native spark.Response where
    native status              :: MutableIO Response -> Int    -> IO ()
    native body                :: MutableIO Response -> String -> IO ()
    native header              :: MutableIO Response -> String -> String -> IO ()
    native cookie              :: MutableIO Response -> String -> String -> IO ()
    native contentType `type`  :: MutableIO Response -> String -> IO ()

--   _____             _
--  |  __ \           | |
--  | |__) |___  _   _| |_ ___
--  |  _  // _ \| | | | __/ _ \
--  | | \ \ (_) | |_| | ||  __/
--  |_|  \_\___/ \__,_|\__\___|
--

{-
    A Route is the function handling the current request. The only
    way of creating a route is by using the method Route.new and
    passing a lambda expression of type (MutableIO Request -> MutableIO Response -> IO a)
--}
data Route = native spark.Route where
    native new chinook.into.Rest.createRoute :: (MutableIO Request -> MutableIO Response -> IO a) -> IO (MutableIO Route)

data Filter = native spark.Filter where
    native new chinook.into.Rest.createFilter :: (MutableIO Request -> MutableIO Response -> IO ()) -> IO (MutableIO Filter)

--   _____                  _
--  / ____|                | |
-- | (___  _ __   __ _ _ __| | __
--  \___ \| '_ \ / _` | '__| |/ /
--  ____) | |_) | (_| | |  |   <
-- |_____/| .__/ \__,_|_|  |_|\_\
--        | |
--        |_|

{--
    Rest wraps all sparkjava.com calls and exposes to Frege
-}
data Rest = native spark.Spark where
    native get     spark.Spark.get     :: String -> MutableIO Route  -> IO ()
    native post    spark.Spark.post    :: String -> MutableIO Route  -> IO ()
    native delete  spark.Spark.delete  :: String -> MutableIO Route  -> IO ()
    native put     spark.Spark.put     :: String -> MutableIO Route  -> IO ()
    native patch   spark.Spark.patch   :: String -> MutableIO Route  -> IO ()
    native options spark.Spark.options :: String -> MutableIO Route  -> IO ()
    native trace   spark.Spark.trace   :: String -> MutableIO Route  -> IO ()
    native connect spark.Spark.connect :: String -> MutableIO Route  -> IO ()
    native head    spark.Spark.connect :: String -> MutableIO Route  -> IO ()
    native before  spark.Spark.before  :: String -> MutableIO Filter -> IO ()
    native after   spark.Spark.after   :: String -> MutableIO Filter -> IO ()
    native halt    spark.Spark.halt    :: Int    -> Maybe String     -> IO ()

{--
  Config wraps all sparkjava.com settings calls
-}
data Config = native spark.Spark where
    native port               spark.Spark.port               :: Int    -> IO ()
    native staticFileLocation spark.Spark.staticFileLocation :: String -> IO ()
